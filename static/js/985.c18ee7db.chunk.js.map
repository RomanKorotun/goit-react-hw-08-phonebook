{"version":3,"file":"static/js/985.c18ee7db.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.js","pages/Contacts.js","hooks/useContacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 6px;\n`;\n\nexport const Button = styled.button`\n  border-radius: ${({ theme: { radius } }) => radius};\n  padding-left: ${({ theme: { spacing } }) => spacing(2)};\n  padding-right: ${({ theme: { spacing } }) => spacing(2)};\n  cursor: pointer;\n  color: #ffffff;\n  background-color: #4d5ae5;\n  border: none;\n  transition: background-color 250ms, transform 250ms;\n  &:hover,\n  :focus {\n    background-color: #404bbf;\n    transform: scale(1.02);\n  }\n`;\n","import { Button, ListItem } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectorVisibleItems } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const visibleItems = useSelector(selectorVisibleItems);\n  return (\n    <ul>\n      {visibleItems.map(({ name, number, id }) => (\n        <ListItem key={id}>\n          <div>\n            <span>{name}: </span>\n            <span>{number} </span>\n          </div>\n          <Button onClick={() => dispatch(deleteContact(id))}>Delete</Button>\n        </ListItem>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 40px;\n  width: 100%;\n  margin-bottom: ${({ theme: { spacing } }) => spacing(3)};\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #000000;\n  outline: none;\n`;\n","import React from 'react';\nimport { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterValue } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispath = useDispatch();\n  return (\n    <React.Fragment>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <Input\n        id=\"filter\"\n        value={filter}\n        onChange={evt => dispath(filterValue(evt.target.value))}\n      ></Input>\n    </React.Fragment>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  width: 100%;\n  margin-bottom: ${({ theme: { spacing } }) => spacing(3)};\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid black;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  align-self: center;\n  border-radius: ${({ theme: { radius } }) => radius};\n  padding-left: ${({ theme: { spacing } }) => spacing(11)};\n  padding-top: ${({ theme: { spacing } }) => spacing(3)};\n  padding-right: ${({ theme: { spacing } }) => spacing(11)};\n  padding-bottom: ${({ theme: { spacing } }) => spacing(3)};\n  cursor: pointer;\n  color: #ffffff;\n  background-color: #4d5ae5;\n  border: none;\n  transition: background-color 250ms, transform 250ms;\n  &:hover,\n  :focus {\n    background-color: #404bbf;\n    transform: scale(1.02);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #e60000;\n  margin-bottom: 20px;\n`;\n","import React from 'react';\nimport Notiflix from 'notiflix';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, ErrMsg, StyledField, StyledForm } from './Phonebook.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .min(2, 'Name must be 2 characters long')\n    .matches('[a-zA-Zа-яА-ЯіІїЇ]+', 'Enter valid symbols'),\n  number: Yup.string()\n    .required('Phone number is required')\n    .matches(\n      '[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}',\n      'Enter valid symbols format xxx-xxx-xx-xx'\n    ),\n});\n\nexport const Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={(values, helpers) => {\n        helpers.resetForm();\n        if (!contacts.find(item => item.name === values.name)) {\n          dispatch(addContact(values));\n        } else {\n          Notiflix.Notify.info(`${values.name} is already in contacts`);\n        }\n      }}\n    >\n      <StyledForm>\n        <label htmlFor=\"name\">Name</label>\n        <StyledField id=\"name\" name=\"name\" />\n        <ErrMsg component=\"div\" name=\"name\" />\n\n        <label type=\"tel\" htmlFor=\"phone\">\n          Phone\n        </label>\n        <StyledField id=\"number\" name=\"number\" />\n        <ErrMsg component=\"div\" name=\"number\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { LayoutSection } from 'components/Layout.styled';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { useContacts } from 'hooks/useContacts';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { BeatLoaderStyled, Error } from 'components/Message';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const { contacts, errorAdd, errorDelete, isLoadingAdd, isLoadingDelete } =\n    useContacts();\n\n  return (\n    <React.Fragment>\n      <LayoutSection>\n        <Phonebook />\n        {isLoadingAdd && <BeatLoaderStyled color=\"#36d7b7\"></BeatLoaderStyled>}\n        {errorAdd && (\n          <Error>Error... Please reload the page and try again!</Error>\n        )}\n      </LayoutSection>\n      {contacts.length > 0 && (\n        <LayoutSection>\n          <Filter />\n          <ContactsList />\n          {isLoadingDelete && (\n            <BeatLoaderStyled color=\"#36d7b7\"></BeatLoaderStyled>\n          )}\n          {errorDelete && (\n            <Error>Error... Please reload the page and try again!</Error>\n          )}\n        </LayoutSection>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Contacts;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectErrorAddContacts,\n  selectErrorDeleteContacts,\n  selectIsLoadingDelete,\n  selectLoadingAdd,\n} from 'redux/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoadingAdd = useSelector(selectLoadingAdd);\n  const isLoadingDelete = useSelector(selectIsLoadingDelete);\n  const errorAdd = useSelector(selectErrorAddContacts);\n  const errorDelete = useSelector(selectErrorDeleteContacts);\n  return {\n    contacts,\n    isLoadingAdd,\n    isLoadingDelete,\n    errorAdd,\n    errorDelete,\n  };\n};\n"],"names":["ListItem","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","_ref","theme","radius","_ref2","spacing","_ref3","ContactsList","dispatch","useDispatch","visibleItems","useSelector","selectorVisibleItems","_jsx","children","map","name","number","id","_jsxs","onClick","deleteContact","Input","Filter","filter","selectFilter","dispath","React","htmlFor","value","onChange","evt","filterValue","target","StyledForm","Form","StyledField","Field","_templateObject3","_ref4","_ref5","_ref6","ErrMsg","ErrorMessage","_templateObject4","SignupSchema","Yup","shape","required","min","matches","Phonebook","contacts","selectContacts","Formik","initialValues","validationSchema","onSubmit","values","helpers","resetForm","find","item","Notiflix","concat","addContact","component","type","useEffect","fetchContacts","_useContacts","isLoadingAdd","selectLoadingAdd","isLoadingDelete","selectIsLoadingDelete","errorAdd","selectErrorAddContacts","errorDelete","selectErrorDeleteContacts","LayoutSection","BeatLoaderStyled","color","Error","length"],"sourceRoot":""}