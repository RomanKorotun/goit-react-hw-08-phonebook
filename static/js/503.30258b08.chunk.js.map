{"version":3,"file":"static/js/503.30258b08.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  width: 100%;\n  margin-bottom: ${({ theme: { spacing } }) => spacing(3)};\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid ${({ theme: { colors } }) => colors.borderColorInput};\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  border-radius: ${({ theme: { radius } }) => radius};\n  padding-left: ${({ theme: { spacing } }) => spacing(4)};\n  padding-top: ${({ theme: { spacing } }) => spacing(3)};\n  padding-right: ${({ theme: { spacing } }) => spacing(4)};\n  padding-bottom: ${({ theme: { spacing } }) => spacing(3)};\n  align-self: center;\n  @media only screen and (min-width: 428px) {\n    padding-left: ${({ theme: { spacing } }) => spacing(6)};\n    padding-right: ${({ theme: { spacing } }) => spacing(6)};\n  }\n\n  cursor: pointer;\n  color: ${({ theme: { colors } }) => colors.secondaryColor};\n  background-color: ${({ theme: { bgColors } }) => bgColors.bgColorButton};\n  border: none;\n  transition: background-color 250ms, transform 250ms;\n  &:hover,\n  :focus {\n    background-color: ${({ theme: { bgColors } }) => bgColors.activeBgColor};\n    transform: scale(1.02);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: ${({ theme: { colors } }) => colors.errorColor};\n  margin-bottom: 20px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Button, ErrMsg, StyledField, StyledForm } from './LoginForm.styled';\nimport { login } from 'redux/auth/operations';\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string().required('Passsword is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={(values, helpers) => {\n        dispatch(login(values));\n        helpers.resetForm();\n      }}\n    >\n      <StyledForm>\n        <label htmlFor=\"email\">Email</label>\n        <StyledField id=\"email\" name=\"email\" type=\"email\" />\n        <ErrMsg component=\"div\" name=\"email\" />\n\n        <label htmlFor=\"password\">Password</label>\n        <StyledField id=\"password\" name=\"password\" type=\"password\" />\n        <ErrMsg component=\"div\" name=\"password\" />\n\n        <Button type=\"submit\">Submit</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport React from 'react';\nimport { BeatLoaderStyled, Error } from 'components/Message';\nimport { useAuth } from 'hooks/useAuth';\nimport { Container, LayoutSection } from 'components/Layout/Layout.styled';\n\nconst Login = () => {\n  const { errorLogin, isLoadingLogin } = useAuth();\n  return (\n    <LayoutSection>\n      <Container>\n        <LoginForm />\n        {isLoadingLogin && (\n          <BeatLoaderStyled color=\"#36d7b7\"></BeatLoaderStyled>\n        )}\n        {errorLogin && (\n          <Error>Error... Please reload the page and try again!</Error>\n        )}\n      </Container>\n    </LayoutSection>\n  );\n};\n\nexport default Login;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledField","Field","_templateObject2","_ref","spacing","theme","_ref2","colors","borderColorInput","Button","_templateObject3","_ref3","radius","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","secondaryColor","_ref11","bgColors","bgColorButton","_ref12","activeBgColor","ErrMsg","ErrorMessage","_templateObject4","_ref13","errorColor","SignupSchema","Yup","shape","email","required","password","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","helpers","login","resetForm","children","_jsxs","htmlFor","id","name","type","component","_useAuth","useAuth","errorLogin","isLoadingLogin","LayoutSection","Container","BeatLoaderStyled","color","Error"],"sourceRoot":""}