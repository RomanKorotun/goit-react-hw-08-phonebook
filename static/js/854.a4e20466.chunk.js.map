{"version":3,"file":"static/js/854.a4e20466.chunk.js","mappings":"mQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uDAKzBC,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wKAGrB,SAAAI,GAAmB,OAASC,EAATD,EAAhBE,MAASD,SAAwB,EAAE,IAG5B,SAAAE,GAAkB,OAAAA,EAAfD,MAASE,OAAsBC,gBAAgB,IAIlEC,EAASb,EAAAA,GAAAA,OAAac,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,8WAEhB,SAAAY,GAAkB,OAAAA,EAAfN,MAASO,MAAqB,IAClC,SAAAC,GAAmB,OAAST,EAATS,EAAhBR,MAASD,SAAwB,GAAG,IACxC,SAAAU,GAAmB,OAASV,EAATU,EAAhBT,MAASD,SAAwB,EAAE,IACpC,SAAAW,GAAmB,OAASX,EAATW,EAAhBV,MAASD,SAAwB,GAAG,IACtC,SAAAY,GAAmB,OAASZ,EAATY,EAAhBX,MAASD,SAAwB,EAAE,IAE/C,SAAAa,GAAkB,OAAAA,EAAfZ,MAASE,OAAsBW,cAAc,IACrC,SAAAC,GAAoB,OAAAA,EAAjBd,MAASe,SAA0BC,aAAa,IAKjD,SAAAC,GAAoB,OAAAA,EAAjBjB,MAASe,SAA0BG,aAAa,I,SC3B9DC,EAAe,WAC1B,IAAMC,GAAUC,EAAAA,EAAAA,MAChB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAQC,GACjBV,GAAQW,EAAAA,EAAAA,IAASF,IACjBC,EAAQE,WACV,EAAEC,UAEFC,EAAAA,EAAAA,MAAC5C,EAAU,CAAA2C,SAAA,EACTX,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,OAAMF,SAAC,UACtBX,EAAAA,EAAAA,KAAC3B,EAAW,CAACyC,GAAG,OAAOX,KAAK,UAE5BH,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,QAAOF,SAAC,WACvBX,EAAAA,EAAAA,KAAC3B,EAAW,CAACyC,GAAG,QAAQX,KAAK,QAAQY,KAAK,WAE1Cf,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,WAAUF,SAAC,cAC1BX,EAAAA,EAAAA,KAAC3B,EAAW,CAACyC,GAAG,WAAWX,KAAK,WAAWY,KAAK,cAChDf,EAAAA,EAAAA,KAAClB,EAAM,CAACiC,KAAK,SAAQJ,SAAC,eAI9B,E,oBCTA,EAjBiB,WACf,IAAAK,GAA6CC,EAAAA,EAAAA,KAArCC,EAAaF,EAAbE,cAAeC,EAAiBH,EAAjBG,kBACvB,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,SAAc,CAAAT,UACbC,EAAAA,EAAAA,MAACS,EAAAA,EAAa,CAAAV,SAAA,EACZX,EAAAA,EAAAA,KAACH,EAAY,IACZsB,IACCnB,EAAAA,EAAAA,KAACsB,EAAAA,EAAgB,CAACC,MAAM,YAEzBL,IACClB,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CAAAb,SAAC,uDAKjB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  width: 100%;\n  margin-bottom: ${({ theme: { spacing } }) => spacing(3)};\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid ${({ theme: { colors } }) => colors.borderColorInput};\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  align-self: center;\n  border-radius: ${({ theme: { radius } }) => radius};\n  padding-left: ${({ theme: { spacing } }) => spacing(11)};\n  padding-top: ${({ theme: { spacing } }) => spacing(3)};\n  padding-right: ${({ theme: { spacing } }) => spacing(11)};\n  padding-bottom: ${({ theme: { spacing } }) => spacing(3)};\n  cursor: pointer;\n  color: ${({ theme: { colors } }) => colors.secondaryColor};\n  background-color: ${({ theme: { bgColors } }) => bgColors.bgColorButton};\n  border: none;\n  transition: background-color 250ms, transform 250ms;\n  &:hover,\n  :focus {\n    background-color: ${({ theme: { bgColors } }) => bgColors.activeBgColor};\n    transform: scale(1.02);\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { StyledForm, StyledField, Button } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispath = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, helpers) => {\n        dispath(register(values));\n        helpers.resetForm();\n      }}\n    >\n      <StyledForm>\n        <label htmlFor=\"name\">Name</label>\n        <StyledField id=\"name\" name=\"name\" />\n\n        <label htmlFor=\"email\">Email</label>\n        <StyledField id=\"email\" name=\"email\" type=\"email\" />\n\n        <label htmlFor=\"password\">Password</label>\n        <StyledField id=\"password\" name=\"password\" type=\"password\" />\n        <Button type=\"submit\">Submit</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { LayoutSection } from 'components/Layout/Layout.styled';\nimport { Error } from 'components/Message';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { useAuth } from 'hooks/useAuth';\nimport React from 'react';\nimport { BeatLoaderStyled } from 'components/Message';\nconst Register = () => {\n  const { errorRegister, isLoadingRegister } = useAuth();\n  return (\n    <React.Fragment>\n      <LayoutSection>\n        <RegisterForm />\n        {isLoadingRegister && (\n          <BeatLoaderStyled color=\"#36d7b7\"></BeatLoaderStyled>\n        )}\n        {errorRegister && (\n          <Error>Error... Please reload the page and try again!</Error>\n        )}\n      </LayoutSection>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledField","Field","_templateObject2","_ref","spacing","theme","_ref2","colors","borderColorInput","Button","_templateObject3","_ref3","radius","_ref4","_ref5","_ref6","_ref7","_ref8","secondaryColor","_ref9","bgColors","bgColorButton","_ref10","activeBgColor","RegisterForm","dispath","useDispatch","_jsx","Formik","initialValues","name","email","password","onSubmit","values","helpers","register","resetForm","children","_jsxs","htmlFor","id","type","_useAuth","useAuth","errorRegister","isLoadingRegister","React","LayoutSection","BeatLoaderStyled","color","Error"],"sourceRoot":""}